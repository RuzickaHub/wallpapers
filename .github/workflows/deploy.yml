name: üöÄ Deploy via FTP with Smart Fallback

on:
  push:
    branches:
      - main
  workflow_dispatch: # mo≈ænost spustit ruƒçnƒõ z GitHubu

jobs:
  ftp-deploy:
    name: üåê Upload to FTP Server (FTPS ‚Üí FTP fallback)
    runs-on: ubuntu-latest

    steps:
      # --- 1. Checkout repository ---
      - name: üß© Checkout repository
        uses: actions/checkout@v4

      # --- 2. Optional build step ---
      - name: ‚öôÔ∏è Prepare project
        run: |
          echo "‚úÖ Projekt p≈ôipraven pro upload"
          echo "üßπ Vyluƒçuji nepot≈ôebn√© soubory (.git, cache, .zip...)"

      # --- 3. Attempt secure FTPS upload ---
      - name: üöÄ Deploy via FTPS
        id: ftps
        continue-on-error: true   # umo≈æn√≠ fallback, pokud FTPS sel≈æe
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./
          server-dir: /
          protocol: ftps
          port: 21
          timeout: 120000
          exclude: |
            **/.git*
            **/.github*
            **/node_modules/**
            **/cache/**
            **/*.zip
            **/*.md
            **/README.*
            **/LICENSE
          log-level: verbose

      # --- 4. Fallback to FTP if FTPS failed ---
      - name: üîÅ Retry via plain FTP (fallback)
        if: steps.ftps.outcome == 'failure'
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./
          server-dir: /
          protocol: ftp
          port: 21
          timeout: 120000
          exclude: |
            **/.git*
            **/.github*
            **/node_modules/**
            **/cache/**
            **/*.zip
            **/*.md
            **/README.*
            **/LICENSE
          log-level: minimal

      # --- 5. Confirmation message ---
      - name: ‚úÖ Confirm deploy success
        if: success()
        run: echo "‚úÖ FTP/FTPS deploy completed successfully!"
